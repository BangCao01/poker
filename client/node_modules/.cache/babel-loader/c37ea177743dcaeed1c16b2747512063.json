{"ast":null,"code":"// import logo from './logo.svg';\n// import './App.css';\nimport { ChatContext } from '../ChatContext';\nimport * as PIXI from 'pixi.js';\nimport { CardSheet } from './Resource';\nimport Game from './Game';\n\nclass Poker extends Game {\n  constructor(props) {\n    super(props);\n    this.bunny = null;\n    this.state = {\n      app: null\n    };\n  }\n\n  componentDidMount() {\n    // initiate socket connection\n    this.context.init();\n    const observable = this.context.onMessage();\n    observable.subscribe(m => {\n      let messages = this.state.messages;\n      messages.push(m);\n      this.setState({\n        messages: messages\n      });\n    });\n    super.componentDidMount();\n  }\n\n  Init() {\n    this.bunny = PIXI.Sprite.from(CardSheet[0]); // center the sprite's anchor point\n\n    if (this.bunny !== null) console.log('BBBBBBB');\n    this.bunny.anchor.set(0.5); // move the sprite to the center of the screen\n\n    this.bunny.x = this.canvasApp.screen.width / 2;\n    this.bunny.y = this.canvasApp.screen.height / 2;\n    ;\n    this.bunny.scale.x = 0.2;\n    this.bunny.scale.y = 0.2;\n    this.canvasApp.stage.addChild(this.bunny);\n  }\n\n  loadResource() {}\n\n  Update(delta) {\n    this.bunny.rotation += 0.1 * delta; // console.log('');\n  }\n\n  componentWillUnmount() {\n    this.context.disconnect();\n  }\n\n  render() {\n    return super.render();\n  }\n\n}\n\nPoker.contextType = ChatContext;\nexport default Poker;","map":{"version":3,"sources":["/Users/bangcao/Desktop/Projects/ts-live-chat-demo-master/client/src/games/Poker.tsx"],"names":["ChatContext","PIXI","CardSheet","Game","Poker","constructor","props","bunny","state","app","componentDidMount","context","init","observable","onMessage","subscribe","m","messages","push","setState","Init","Sprite","from","console","log","anchor","set","x","canvasApp","screen","width","y","height","scale","stage","addChild","loadResource","Update","delta","rotation","componentWillUnmount","disconnect","render","contextType"],"mappings":"AACA;AACA;AAEA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAO,KAAKC,IAAZ,MAAsB,SAAtB;AAEA,SAAQC,SAAR,QAAwB,YAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,KAAN,SAAoBD,IAApB,CAAyB;AAIvBE,EAAAA,WAAW,CAACC,KAAD,EAAY;AACrB,UAAMA,KAAN;AADqB,SAFhBC,KAEgB,GAFH,IAEG;AAAA,SADhBC,KACgB,GADH;AAACC,MAAAA,GAAG,EAAE;AAAN,KACG;AAGtB;;AAEDC,EAAAA,iBAAiB,GAAI;AAEnB;AACA,SAAKC,OAAL,CAAaC,IAAb;AAEA,UAAMC,UAAU,GAAG,KAAKF,OAAL,CAAaG,SAAb,EAAnB;AAEAD,IAAAA,UAAU,CAACE,SAAX,CAAsBC,CAAD,IAAoB;AACvC,UAAIC,QAAQ,GAAG,KAAKT,KAAL,CAAWS,QAA1B;AAEAA,MAAAA,QAAQ,CAACC,IAAT,CAAcF,CAAd;AACA,WAAKG,QAAL,CAAc;AAAEF,QAAAA,QAAQ,EAAEA;AAAZ,OAAd;AACD,KALD;AAMA,UAAMP,iBAAN;AACD;;AACMU,EAAAA,IAAP,GACA;AACE,SAAKb,KAAL,GAAaN,IAAI,CAACoB,MAAL,CAAYC,IAAZ,CAAiBpB,SAAS,CAAC,CAAD,CAA1B,CAAb,CADF,CAGE;;AACA,QAAG,KAAKK,KAAL,KAAe,IAAlB,EACAgB,OAAO,CAACC,GAAR,CAAY,SAAZ;AAEA,SAAKjB,KAAL,CAAWkB,MAAX,CAAkBC,GAAlB,CAAsB,GAAtB,EAPF,CASE;;AACA,SAAKnB,KAAL,CAAWoB,CAAX,GAAe,KAAKC,SAAL,CAAeC,MAAf,CAAsBC,KAAtB,GAA8B,CAA7C;AACA,SAAKvB,KAAL,CAAWwB,CAAX,GAAe,KAAKH,SAAL,CAAeC,MAAf,CAAsBG,MAAtB,GAA+B,CAA9C;AAAgD;AAChD,SAAKzB,KAAL,CAAW0B,KAAX,CAAiBN,CAAjB,GAAqB,GAArB;AACA,SAAKpB,KAAL,CAAW0B,KAAX,CAAiBF,CAAjB,GAAqB,GAArB;AAEA,SAAKH,SAAL,CAAeM,KAAf,CAAqBC,QAArB,CAA8B,KAAK5B,KAAnC;AAGD;;AAEM6B,EAAAA,YAAP,GACA,CAEC;;AAEMC,EAAAA,MAAP,CAAcC,KAAd,EACA;AACE,SAAK/B,KAAL,CAAWgC,QAAX,IAAuB,MAAMD,KAA7B,CADF,CAEE;AACD;;AAEDE,EAAAA,oBAAoB,GAAI;AACtB,SAAK7B,OAAL,CAAa8B,UAAb;AACD;;AAEHC,EAAAA,MAAM,GAAG;AACL,WAAO,MAAMA,MAAN,EAAP;AACD;;AA9DsB;;AAAnBtC,K,CACGuC,W,GAAc3C,W;AAgEvB,eAAeI,KAAf","sourcesContent":["import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\nimport { ChatMessage, ChatState } from '../types';\nimport { ChatContext } from '../ChatContext';\nimport * as PIXI from 'pixi.js';\nimport myImage from '../assets/cards.png';\nimport {CardSheet} from './Resource';\nimport Game from './Game';\n\nclass Poker extends Game {\n  static contextType = ChatContext;\n  public bunny: any = null;\n  public state: any = {app: null}\n  constructor(props:any) {\n    super(props);\n    \n  }\n\n  componentDidMount () {\n\n    // initiate socket connection\n    this.context.init();\n\n    const observable = this.context.onMessage();\n\n    observable.subscribe((m: ChatMessage) => {\n      let messages = this.state.messages;\n\n      messages.push(m);\n      this.setState({ messages: messages });\n    });\n    super.componentDidMount();\n  }\n  public Init()\n  {\n    this.bunny = PIXI.Sprite.from(CardSheet[0]);\n\n    // center the sprite's anchor point\n    if(this.bunny !== null)\n    console.log('BBBBBBB');\n\n    this.bunny.anchor.set(0.5);\n\n    // move the sprite to the center of the screen\n    this.bunny.x = this.canvasApp.screen.width / 2;\n    this.bunny.y = this.canvasApp.screen.height / 2;;\n    this.bunny.scale.x = 0.2;\n    this.bunny.scale.y = 0.2;\n\n    this.canvasApp.stage.addChild(this.bunny);\n\n    \n  }\n\n  public loadResource()\n  {\n\n  }\n\n  public Update(delta:any)\n  {\n    this.bunny.rotation += 0.1 * delta;\n    // console.log('');\n  }\n\n  componentWillUnmount () {\n    this.context.disconnect();\n  }\n\nrender() {\n    return super.render();\n  }\n}\n\nexport default Poker;\n"]},"metadata":{},"sourceType":"module"}