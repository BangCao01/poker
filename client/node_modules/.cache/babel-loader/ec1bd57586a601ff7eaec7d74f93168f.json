{"ast":null,"code":"import Player from './Player';\nimport * as PIXI from 'pixi.js';\nimport { Avatars } from '../commons/Resource';\nimport Card from '../commons/Card';\n\nclass PokerPlayer extends Player {\n  constructor(_positionId, _card) {\n    super(_positionId);\n    this.cards = [];\n    this.avatar = PIXI.Sprite.from(Avatars[0]);\n    this.avatar.anchor.set(0.5);\n    this.avatar.scale.x = 0.3;\n    this.avatar.scale.y = 0.3;\n    this.Init(_card);\n  }\n\n  Init(_card) {\n    let cards = _card.split(',');\n\n    cards.forEach(value => {\n      let ca = new Card(value);\n      this.cards.push(ca);\n    });\n  }\n\n  setPosition(x, y) {\n    this.positionX = x;\n    this.positionY = y;\n    this.avatar.x = x;\n    this.avatar.y = y; // this.layoutCard();\n  }\n\n  layoutCard() {\n    for (let i = 0; i < this.cards.length; i++) {\n      let card = this.cards[i];\n      card.setPosition(i * 50, this.positionY);\n      if (this.avatar !== null && this.avatar !== undefined) this.avatar.addChild(card);\n    }\n  }\n\n  fireCard() {}\n\n  onCardFired() {}\n\n  doCheck() {}\n\n  doCall() {}\n\n  doFold() {}\n\n  doRaise() {}\n\n}\n\nexport default PokerPlayer;","map":{"version":3,"sources":["/Users/bangcao/Desktop/Projects/poker/client/src/users/PokerPlayer.tsx"],"names":["Player","PIXI","Avatars","Card","PokerPlayer","constructor","_positionId","_card","cards","avatar","Sprite","from","anchor","set","scale","x","y","Init","split","forEach","value","ca","push","setPosition","positionX","positionY","layoutCard","i","length","card","undefined","addChild","fireCard","onCardFired","doCheck","doCall","doFold","doRaise"],"mappings":"AACA,OAAOA,MAAP,MAAkC,UAAlC;AAEA,OAAO,KAAKC,IAAZ,MAAsB,SAAtB;AACA,SAAmBC,OAAnB,QAAiC,qBAAjC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;AAEA,MAAMC,WAAN,SAA0BJ,MAA1B,CACA;AAEIK,EAAAA,WAAW,CAACC,WAAD,EAAsBC,KAAtB,EACX;AACI,UAAMD,WAAN;AADJ,SAFOE,KAEP,GAFoB,EAEpB;AAEI,SAAKC,MAAL,GAAcR,IAAI,CAACS,MAAL,CAAYC,IAAZ,CAAiBT,OAAO,CAAC,CAAD,CAAxB,CAAd;AACA,SAAKO,MAAL,CAAYG,MAAZ,CAAmBC,GAAnB,CAAuB,GAAvB;AACA,SAAKJ,MAAL,CAAYK,KAAZ,CAAkBC,CAAlB,GAAsB,GAAtB;AACA,SAAKN,MAAL,CAAYK,KAAZ,CAAkBE,CAAlB,GAAsB,GAAtB;AACA,SAAKC,IAAL,CAAUV,KAAV;AAEH;;AAEOU,EAAAA,IAAR,CAAaV,KAAb,EACA;AACI,QAAIC,KAAK,GAAGD,KAAK,CAACW,KAAN,CAAY,GAAZ,CAAZ;;AACAV,IAAAA,KAAK,CAACW,OAAN,CAAcC,KAAK,IAAI;AAEnB,UAAIC,EAAE,GAAG,IAAIlB,IAAJ,CAASiB,KAAT,CAAT;AACA,WAAKZ,KAAL,CAAWc,IAAX,CAAgBD,EAAhB;AACH,KAJD;AAMH;;AAEME,EAAAA,WAAP,CAAmBR,CAAnB,EAA6BC,CAA7B,EACA;AACI,SAAKQ,SAAL,GAAiBT,CAAjB;AACA,SAAKU,SAAL,GAAiBT,CAAjB;AACA,SAAKP,MAAL,CAAYM,CAAZ,GAAgBA,CAAhB;AACA,SAAKN,MAAL,CAAYO,CAAZ,GAAgBA,CAAhB,CAJJ,CAKI;AAEH;;AAEMU,EAAAA,UAAP,GACA;AACI,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKnB,KAAL,CAAWoB,MAA9B,EAAsCD,CAAC,EAAvC,EACA;AACI,UAAIE,IAAU,GAAG,KAAKrB,KAAL,CAAWmB,CAAX,CAAjB;AACAE,MAAAA,IAAI,CAACN,WAAL,CAAiBI,CAAC,GAAC,EAAnB,EAAuB,KAAKF,SAA5B;AACA,UAAG,KAAKhB,MAAL,KAAgB,IAAhB,IAAwB,KAAKA,MAAL,KAAgBqB,SAA3C,EACA,KAAKrB,MAAL,CAAYsB,QAAZ,CAAqBF,IAArB;AACH;AACJ;;AAEMG,EAAAA,QAAP,GACA,CAEC;;AACMC,EAAAA,WAAP,GACA,CAEC;;AAEMC,EAAAA,OAAP,GACA,CAEC;;AAEMC,EAAAA,MAAP,GACA,CAEC;;AAEMC,EAAAA,MAAP,GACA,CAEC;;AAEMC,EAAAA,OAAP,GACA,CAEC;;AAxEL;;AA4EA,eAAejC,WAAf","sourcesContent":["\nimport Player, {PlayerState} from './Player';\nimport { ChatMessage, ChatState, LoginMessage, CardMessage } from '../types';\nimport * as PIXI from 'pixi.js';\nimport {CardSheet, Avatars} from '../commons/Resource';\nimport Card from '../commons/Card';\n\nclass PokerPlayer extends Player\n{\n    public cards: any = [];\n    constructor(_positionId: number, _card: string)\n    {\n        super(_positionId);\n        this.avatar = PIXI.Sprite.from(Avatars[0]);\n        this.avatar.anchor.set(0.5);\n        this.avatar.scale.x = 0.3;\n        this.avatar.scale.y = 0.3;\n        this.Init(_card);\n\n    }\n\n    private Init(_card: string)\n    {\n        let cards = _card.split(',');\n        cards.forEach(value => {\n              \n            let ca = new Card(value);\n            this.cards.push(ca);\n        });\n        \n    }\n\n    public setPosition(x:number, y:number)\n    {\n        this.positionX = x;\n        this.positionY = y;\n        this.avatar.x = x;\n        this.avatar.y = y;\n        // this.layoutCard();\n\n    }\n\n    public layoutCard()\n    {\n        for(let i = 0; i < this.cards.length; i++)\n        {\n            let card: Card = this.cards[i];\n            card.setPosition(i*50, this.positionY); \n            if(this.avatar !== null && this.avatar !== undefined)\n            this.avatar.addChild(card);  \n        }\n    }\n\n    public fireCard()\n    {\n\n    }\n    public onCardFired()\n    {\n\n    }\n\n    public doCheck()\n    {\n\n    }\n\n    public doCall()\n    {\n\n    }\n\n    public doFold()\n    {\n\n    }\n\n    public doRaise()\n    {\n\n    }\n\n}\n\nexport default PokerPlayer;\n"]},"metadata":{},"sourceType":"module"}