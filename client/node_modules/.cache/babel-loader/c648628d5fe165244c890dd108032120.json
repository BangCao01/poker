{"ast":null,"code":"var _jsxFileName = \"/Users/bangcao/Desktop/Projects/ts-live-chat-demo-master/client/src/games/Poker.tsx\";\nimport React from 'react'; // import logo from './logo.svg';\n// import './App.css';\n\nimport { ChatContext } from '../ChatContext';\nimport * as PIXI from 'pixi.js';\nimport myImage from '../assets/cards.png';\n\nclass Poker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.pixi_cnt = null;\n    this.canvasApp = null;\n    this.avatar = null;\n    this.state = {\n      app: null\n    };\n\n    this.setup = () => {\n      PIXI.Loader.shared.add(\"avatar\", myImage).load(this.initialize);\n    };\n\n    this.initialize = () => {\n      //We will create a sprite and then add it to stage and (0,0) position\n      this.avatar = new PIXI.Sprite(PIXI.Loader.shared.resources[\"avatar\"].texture);\n      this.state.app.stage.addChild(this.avatar);\n    };\n\n    this.pixi_cnt = null;\n  }\n\n  componentDidMount() {\n    //initiate socket connection\n    this.context.init();\n    const observable = this.context.onMessage();\n    observable.subscribe(m => {\n      let messages = this.state.messages;\n      messages.push(m);\n      this.setState({\n        messages: messages\n      });\n    });\n    this.canvasApp = new PIXI.Application({\n      width: 1000,\n      height: 1000,\n      transparent: false,\n      backgroundColor: 0x1099bb\n    });\n    this.setState({\n      app: this.canvasApp\n    });\n    const canvas = document.getElementById('canvas');\n    if (canvas !== null) canvas.appendChild(this.canvasApp.view); // create a new Sprite from an image path\n    // const bunny = new PIXI.Text('Basic text in pixi');\n    // const bunny = PIXI.Sprite.from('https://cdn.dribbble.com/users/375867/screenshots/2790167/bunny-rabbit-cute-game-character-sprite-sheets_dribbble.jpg');\n\n    const bunny = PIXI.Sprite.from('bunny.png'); // center the sprite's anchor point\n\n    if (bunny !== null) console.log('BBBBBBB');\n    bunny.anchor.set(0.5); // move the sprite to the center of the screen\n\n    bunny.x = 100;\n    bunny.y = 100;\n    this.canvasApp.stage.addChild(bunny); // Listen for animate update\n\n    this.canvasApp.ticker.add(delta => {\n      // just for fun, let's rotate mr rabbit a little\n      // delta is 1 if running at 100% performance\n      // creates frame-independent transformation\n      bunny.rotation += 0.1 * delta; //console.log('lll');\n    });\n  }\n\n  componentWillUnmount() {\n    this.context.disconnect();\n  }\n\n  render() {\n    if (this.canvasApp !== undefined && this.canvasApp.renderer !== null) {\n      requestAnimationFrame(this.render);\n      this.canvasApp.renderer.render(this.canvasApp.stage);\n    }\n\n    return React.createElement(\"div\", {\n      id: \"canvas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    });\n  }\n\n}\n\nPoker.contextType = ChatContext;\nexport default Poker;","map":{"version":3,"sources":["/Users/bangcao/Desktop/Projects/ts-live-chat-demo-master/client/src/games/Poker.tsx"],"names":["React","ChatContext","PIXI","myImage","Poker","Component","constructor","props","pixi_cnt","canvasApp","avatar","state","app","setup","Loader","shared","add","load","initialize","Sprite","resources","texture","stage","addChild","componentDidMount","context","init","observable","onMessage","subscribe","m","messages","push","setState","Application","width","height","transparent","backgroundColor","canvas","document","getElementById","appendChild","view","bunny","from","console","log","anchor","set","x","y","ticker","delta","rotation","componentWillUnmount","disconnect","render","undefined","renderer","requestAnimationFrame","contextType"],"mappings":"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","sourcesContent":["import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\nimport { ChatMessage, ChatState } from '../types';\nimport { ChatContext } from '../ChatContext';\nimport * as PIXI from 'pixi.js';\nimport myImage from '../assets/cards.png';\nimport { identity } from 'rxjs';\n\nclass Poker extends React.Component {\n  static contextType = ChatContext;\n  public pixi_cnt:any = null;\n  public canvasApp:any = null;\n  public avatar: any = null;\n  public state: any = {app: null}\n  constructor(props:any) {\n    super(props);\n    this.pixi_cnt = null;\n\n\n  }\n\n  componentDidMount () {\n\n    //initiate socket connection\n    this.context.init();\n\n    const observable = this.context.onMessage();\n\n    observable.subscribe((m: ChatMessage) => {\n      let messages = this.state.messages;\n\n      messages.push(m);\n      this.setState({ messages: messages });\n    });\n\n    this.canvasApp = new PIXI.Application({width: 1000, height: 1000, transparent:false, backgroundColor: 0x1099bb})\n    \n    this.setState({app:this.canvasApp});\n     \n    const canvas = document.getElementById('canvas');\n    \n    \n    if(canvas !== null) \n    canvas.appendChild(this.canvasApp.view);\n\n    // create a new Sprite from an image path\n    // const bunny = new PIXI.Text('Basic text in pixi');\n\n      // const bunny = PIXI.Sprite.from('https://cdn.dribbble.com/users/375867/screenshots/2790167/bunny-rabbit-cute-game-character-sprite-sheets_dribbble.jpg');\n      const bunny = PIXI.Sprite.from('bunny.png');\n\n      // center the sprite's anchor point\n      if(bunny !== null)\n      console.log('BBBBBBB');\n\n      bunny.anchor.set(0.5);\n\n      // move the sprite to the center of the screen\n      bunny.x = 100;\n      bunny.y = 100;\n\n      this.canvasApp.stage.addChild(bunny);\n\n      // Listen for animate update\n      this.canvasApp.ticker.add((delta:any) => {\n          // just for fun, let's rotate mr rabbit a little\n          // delta is 1 if running at 100% performance\n          // creates frame-independent transformation\n          bunny.rotation += 0.1 * delta;\n          //console.log('lll');\n          \n      });\n\n     \n      \n  }\n\n  componentWillUnmount () {\n    this.context.disconnect();\n  }\n\n  \n\n setup = () => {\n  PIXI.Loader.shared.add(\"avatar\",myImage)\n       .load(this.initialize);\n};\ninitialize = () => {\n   //We will create a sprite and then add it to stage and (0,0) position\n   this.avatar = new PIXI.Sprite(PIXI.Loader.shared.resources[\"avatar\"].texture);\n   this.state.app.stage.addChild(this.avatar);\n\n};\n  \nrender() {\n  \n  if(this.canvasApp !== undefined && this.canvasApp.renderer !== null)\n  {\n  requestAnimationFrame(this.render);\n  this.canvasApp.renderer.render(this.canvasApp.stage);\n  }\n  \n    return <div id='canvas'/>;\n  }\n}\n\nexport default Poker;\n"]},"metadata":{},"sourceType":"module"}