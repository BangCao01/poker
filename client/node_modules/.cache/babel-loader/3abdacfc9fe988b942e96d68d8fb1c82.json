{"ast":null,"code":"import Player from './Player';\nimport * as PIXI from 'pixi.js';\nimport { Avatars } from '../commons/Resource';\n\nclass PokerPlayer extends Player {\n  constructor(_positionId, _card) {\n    super(_positionId);\n    this.cards = [];\n    this.avatar = PIXI.Sprite.from(Avatars[0]);\n    this.avatar.anchor.set(0.5);\n  }\n\n  setPosition(x, y) {\n    this.positionX = x;\n    this.positionY = y;\n    this.avatar.x = x;\n    this.avatar.y = y;\n  }\n\n  fireCard() {}\n\n  onCardFired() {}\n\n  doCheck() {}\n\n  doCall() {}\n\n  doFold() {}\n\n  doRaise() {}\n\n}\n\nexport default PokerPlayer;","map":{"version":3,"sources":["/Users/bangcao/Desktop/Projects/poker/client/src/users/PokerPlayer.tsx"],"names":["Player","PIXI","Avatars","PokerPlayer","constructor","_positionId","_card","cards","avatar","Sprite","from","anchor","set","setPosition","x","y","positionX","positionY","fireCard","onCardFired","doCheck","doCall","doFold","doRaise"],"mappings":"AACA,OAAOA,MAAP,MAAkC,UAAlC;AAEA,OAAO,KAAKC,IAAZ,MAAsB,SAAtB;AACA,SAAmBC,OAAnB,QAAiC,qBAAjC;;AAEA,MAAMC,WAAN,SAA0BH,MAA1B,CACA;AAEII,EAAAA,WAAW,CAACC,WAAD,EAAsBC,KAAtB,EACX;AACI,UAAMD,WAAN;AADJ,SAFOE,KAEP,GAFoB,EAEpB;AAEI,SAAKC,MAAL,GAAcP,IAAI,CAACQ,MAAL,CAAYC,IAAZ,CAAiBR,OAAO,CAAC,CAAD,CAAxB,CAAd;AACA,SAAKM,MAAL,CAAYG,MAAZ,CAAmBC,GAAnB,CAAuB,GAAvB;AACH;;AAEMC,EAAAA,WAAP,CAAmBC,CAAnB,EAA6BC,CAA7B,EACA;AACI,SAAKC,SAAL,GAAiBF,CAAjB;AACA,SAAKG,SAAL,GAAiBF,CAAjB;AACA,SAAKP,MAAL,CAAYM,CAAZ,GAAgBA,CAAhB;AACA,SAAKN,MAAL,CAAYO,CAAZ,GAAgBA,CAAhB;AACH;;AAEMG,EAAAA,QAAP,GACA,CAEC;;AACMC,EAAAA,WAAP,GACA,CAEC;;AAEMC,EAAAA,OAAP,GACA,CAEC;;AAEMC,EAAAA,MAAP,GACA,CAEC;;AAEMC,EAAAA,MAAP,GACA,CAEC;;AAEMC,EAAAA,OAAP,GACA,CAEC;;AA5CL;;AAgDA,eAAepB,WAAf","sourcesContent":["\nimport Player, {PlayerState} from './Player';\nimport { ChatMessage, ChatState, LoginMessage, CardMessage } from '../types';\nimport * as PIXI from 'pixi.js';\nimport {CardSheet, Avatars} from '../commons/Resource';\n\nclass PokerPlayer extends Player\n{\n    public cards: any = [];\n    constructor(_positionId: number, _card: string)\n    {\n        super(_positionId);\n        this.avatar = PIXI.Sprite.from(Avatars[0]);\n        this.avatar.anchor.set(0.5);\n    }\n\n    public setPosition(x:number, y:number)\n    {\n        this.positionX = x;\n        this.positionY = y;\n        this.avatar.x = x;\n        this.avatar.y = y;\n    }\n\n    public fireCard()\n    {\n\n    }\n    public onCardFired()\n    {\n\n    }\n\n    public doCheck()\n    {\n\n    }\n\n    public doCall()\n    {\n\n    }\n\n    public doFold()\n    {\n\n    }\n\n    public doRaise()\n    {\n\n    }\n\n}\n\nexport default PokerPlayer;\n"]},"metadata":{},"sourceType":"module"}