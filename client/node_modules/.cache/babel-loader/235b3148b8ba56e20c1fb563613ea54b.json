{"ast":null,"code":"var _jsxFileName = \"/Users/bangcao/Desktop/Projects/ts-live-chat-demo-master/client/src/users/Login.tsx\";\nimport React from 'react';\nimport logo from \"../logo.svg\";\nimport '../App.css';\nimport { ChatContext } from '../ChatContext'; // import { withRouter } from \"react-router-dom\";\n\nconst LoginForm = {};\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      password: '',\n      username: ''\n    };\n  }\n\n  componentDidMount() {\n    //initiate socket connection\n    this.context.init();\n    const observable = this.context.onLoginMessage();\n    const {\n      history\n    } = this.props;\n    if (history) history.push('/home');\n    observable.subscribe(m => {\n      console.log(m); // let messages = this.state.messages;\n      // messages.push(m);\n      // this.setState({ messages: messages });\n      // this.props.push(\"/index\");\n    });\n  }\n\n  componentWillUnmount() {\n    this.context.disconnect();\n  }\n\n  render() {\n    const updateInput = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      LoginForm[name] = value;\n      this.setState({\n        password: LoginForm['password']\n      });\n      this.setState({\n        username: LoginForm['username']\n      });\n    };\n\n    const handleMessage = () => {\n      console.log(LoginForm);\n\n      if (this.state.password !== '' && this.state.username !== '') {\n        this.context.sendLogin({\n          password: this.state.password,\n          username: this.state.username\n        }); // this.setState({ input: '' });\n      }\n    };\n\n    let msgIndex = 0;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"username\",\n      name: \"username\",\n      placeholder: \"Type your name ...\",\n      onChange: updateInput,\n      value: this.state.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"password\",\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password ...\",\n      onChange: updateInput,\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        handleMessage();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Login\")));\n  }\n\n}\n\nLogin.contextType = ChatContext;\nexport default Login;","map":{"version":3,"sources":["/Users/bangcao/Desktop/Projects/ts-live-chat-demo-master/client/src/users/Login.tsx"],"names":["React","ChatContext","LoginForm","Login","Component","state","password","username","componentDidMount","context","init","observable","onLoginMessage","history","props","push","subscribe","m","console","log","componentWillUnmount","disconnect","render","updateInput","e","name","target","value","setState","handleMessage","sendLogin","msgIndex","logo","contextType"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from '../logo.svg';\nimport '../App.css';\nimport { LoginMessage, LoginState } from '../types';\nimport { ChatContext } from '../ChatContext';\n// import { withRouter } from \"react-router-dom\";\n\nconst LoginForm: any = {};\nclass Login extends React.Component {\n  static contextType = ChatContext;\n\n  state: LoginState = {\n    password: '',\n    username: ''\n  }\n\n  componentDidMount () {\n    \n\n    //initiate socket connection\n    this.context.init();\n\n    const observable = this.context.onLoginMessage();\n    const { history } = this.props;\n     if(history) history.push('/home');\n\n    observable.subscribe((m: LoginMessage) => {\n      console.log(m);\n      // let messages = this.state.messages;\n\n      // messages.push(m);\n      // this.setState({ messages: messages });\n      // this.props.push(\"/index\");\n\n    });\n  }\n\n  componentWillUnmount () {\n    this.context.disconnect();\n  }\n\n  render () {\n\n    const updateInput = (e: React.ChangeEvent<HTMLInputElement>): void => {\n      const name = e.target.name;\n      const value = e.target.value;\n      LoginForm[name] = value;\n      this.setState({ password: LoginForm['password']});\n      this.setState({ username: LoginForm['username']});\n    }\n\n    const handleMessage = (): void => {\n\n      console.log(LoginForm);\n\n      if (this.state.password !== '' && this.state.username !== '') {\n        this.context.sendLogin({\n          password: this.state.password,\n          username: this.state.username\n        });\n        // this.setState({ input: '' });\n      }\n    };\n\n    let msgIndex = 0;\n    return (\n      <div className=\"App\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n        \n        <input\n          className=\"username\"\n          name='username'\n          placeholder=\"Type your name ...\"\n          onChange={updateInput}\n          value={this.state.username}\n        />\n\n\n        <input\n          className=\"password\"\n          name='password'\n          type='password'\n          placeholder=\"Password ...\"\n          onChange={updateInput}\n          value={this.state.password}\n        />\n        <p>\n          <button onClick={() => { handleMessage() }}>\n            Login\n          </button>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}