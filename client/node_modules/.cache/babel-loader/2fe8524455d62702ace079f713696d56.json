{"ast":null,"code":"var _jsxFileName = \"/Users/bangcao/Desktop/Projects/ts-live-chat-demo-master/client/src/App.tsx\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { ChatContext } from './ChatContext';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      messages: [{\n        message: 'Welcome! Type a message and press Send Message to continue the chat.',\n        author: 'Bot'\n      }],\n      input: ''\n    };\n  }\n\n  componentDidMount() {\n    //initiate socket connection\n    this.context.init();\n    const observable = this.context.onMessage();\n    observable.subscribe(m => {\n      let messages = this.state.messages;\n      messages.push(m);\n      this.setState({\n        messages: messages\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.context.disconnect();\n  }\n\n  render() {\n    const updateInput = e => {\n      this.setState({\n        input: e.target.value\n      });\n    };\n\n    const handleMessage = () => {\n      const author = 'Ross';\n\n      if (this.state.input !== '') {\n        this.context.send({\n          message: this.state.input,\n          author: author\n        });\n        this.setState({\n          input: ''\n        });\n      }\n    };\n\n    let msgIndex = 0;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"App-chatbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.state.messages.map(msg => {\n      msgIndex++;\n      return React.createElement(\"div\", {\n        key: msgIndex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, msg.author), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, msg.message));\n    })), React.createElement(\"input\", {\n      className: \"App-Textarea\",\n      placeholder: \"Type your messsage here...\",\n      onChange: updateInput,\n      value: this.state.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        handleMessage();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Send Message\")));\n  }\n\n}\n\nApp.contextType = ChatContext;\nexport default App;","map":{"version":3,"sources":["/Users/bangcao/Desktop/Projects/ts-live-chat-demo-master/client/src/App.tsx"],"names":["React","ChatContext","App","Component","state","messages","message","author","input","componentDidMount","context","init","observable","onMessage","subscribe","m","push","setState","componentWillUnmount","disconnect","render","updateInput","e","target","value","handleMessage","send","msgIndex","logo","map","msg","contextType"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { ChatMessage, ChatState } from './types';\nimport { ChatContext } from './ChatContext';\n\nclass App extends React.Component {\n  static contextType = ChatContext;\n\n  state: ChatState = {\n    messages: [\n      {\n        message: 'Welcome! Type a message and press Send Message to continue the chat.',\n        author: 'Bot'\n      }\n    ],\n    input: ''\n  }\n\n  componentDidMount () {\n\n    //initiate socket connection\n    this.context.init();\n\n    const observable = this.context.onMessage();\n\n    observable.subscribe((m: ChatMessage) => {\n      let messages = this.state.messages;\n\n      messages.push(m);\n      this.setState({ messages: messages });\n    });\n  }\n\n  componentWillUnmount () {\n    this.context.disconnect();\n  }\n\n  render () {\n\n    const updateInput = (e: React.ChangeEvent<HTMLInputElement>): void => {\n      this.setState({ input: e.target.value });\n    }\n\n    const handleMessage = (): void => {\n\n      const author: string = 'Ross';\n\n      if (this.state.input !== '') {\n        this.context.send({\n          message: this.state.input,\n          author: author\n        });\n        this.setState({ input: '' });\n      }\n    };\n\n    let msgIndex = 0;\n    return (\n      <div className=\"App\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n        <div className=\"App-chatbox\">\n          {this.state.messages.map((msg: ChatMessage) => {\n            msgIndex++;\n            return (\n              <div key={msgIndex}>\n                <p>{msg.author}</p>\n                <p>\n                  {msg.message}\n                </p>\n              </div>\n            );\n          })}\n        </div>\n        <input\n          className=\"App-Textarea\"\n          placeholder=\"Type your messsage here...\"\n          onChange={updateInput}\n          value={this.state.input}\n        />\n        <p>\n          <button onClick={() => { handleMessage() }}>\n            Send Message\n          </button>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}